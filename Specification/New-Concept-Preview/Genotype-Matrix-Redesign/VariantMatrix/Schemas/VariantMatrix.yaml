info:
  title: BrAPI
  version: ''
openapi: 3.0.0
paths: {}
components:
  schemas:
    VariantMatrix:
      type: object
      required:
      - data
      properties:
        pagination:
          description: Pagination for the matrix
          type: array
          items:
            type: object
            properties:
              dimension:
                description: The dimension of the matrix being paginated
                type: string
                enum:
                - CALLSETS
                - VARIANTS
                example: VARIANTS
              pageSize: 
                description: the maximum number of elements per page in this dimension of the matrix
                type: integer
                example: 500
              page: 
                description: the requested page number (zero indexed) 
                type: integer
                example: 0
              totalCount:
                description: The total number of elements that are available on the server and match the requested query parameters. 
                type: integer
                example: 10000
              totalPages:
                description: |-
                  The total number of pages of elements available on the server. This should be calculated with the following formula. 
                  <br/>totalPages = CEILING( totalCount / requested_page_size)
                type: integer
                example: 20
          example:
            -  dimension: VARIANTS
               pageSize: 500
               page: 0
               totalCount: 10000
               totalPages: 20
            -  dimension: CALLSETS
               pageSize: 1000
               page: 4
               totalCount: 10000
               totalPages: 10
        callSetDbIds: 
          description: A list of unique identifiers for the CallSets contained in the matrix response. This array should match the ordering for columns in the matrix. A CallSet is a unique combination of a Sample and a sequencing event. CallSets often have a 1-to-1 relationship with Samples, but this is not always the case.
          type: array
          items:
            type: string
          example: ['aca00001', 'aca00002', 'aca00003']
        variantSetDbIds:
          description: A list of unique identifiers for the VariantSets contained in the matrix response. A VariantSet is a data set originating from a sequencing event. Often, users will only be interested in data from a single VariantSet, but in some cases a user might be interested in a matrix with data from multiple VariantSets.
          type: array
          items:
            type: string
          example: ['cfde3944', 'cfde2077', 'cfde4424']
        variantDbIds: 
          description: A list of unique identifiers for the Variants contained in the matrix response. This array should match the ordering for rows in the matrix.
          type: array
          items:
            type: string
          example: ['feb54257', 'feb40355', 'feb40323']
        variants:
          description: A list of unique identifiers and other metadata for the Variants contained in the matrix response. This is a subset of fields from the `GET /variant` data model. These metadata fields were chosen to mimic the metadata in a VCF file.  
          type: array
          items:
            type: object
            properties:
              variantDbId:
                description: The unique identifier of a Variant
                type: string
                example: b54a57fe
              contig: 
                description: The chromosome or linkage group name where this variant exists
                type: string
                example: CHROM_20
              start:
                description: The start position of this variant
                type: integer
                example: 14370
              end:
                description: The end position of this variant
                type: integer
                example: 24370
              alternateBases:
                description: The bases that appear instead of the reference bases. Multiple alternate alleles are possible.
                items:
                  type: string
                type: array
                example: ['G', 'T']
              referenceBases:
                description: The reference bases for this variant. They start at the given start position.
                type: string
                example: 'A'
          example: [{'variantDbId': 'feb54257', 'contig': 'CHROM_20', 'start': 14370, 'end': 24370, 'referenceBases': 'G', 'alternateBases':['A']},
                    {'variantDbId': 'feb40355', 'contig': 'CHROM_20', 'start': 1110696, 'end': 1113696, 'referenceBases': 'A', 'alternateBases':['G', 'T']},
                    {'variantDbId': 'feb40323', 'contig': 'CHROM_20', 'start': 1234567, 'end': 1237567, 'referenceBases': 'GTC', 'alternateBases':['G', 'GTCA']}]
        genotypeMatrix:
          description: The whole genotype matrix, as a two dimensional array.  
          type: array
          items:
            description: The array of rows in the genotype matrix. Each row contains all the genotype data for a particular variant. These rows are ordered the same way as the `variants` array. 
            type: array
            items:
              description: The array of genotype values per row (columns) in the matrix. Each genotype value should be represented as a list of integers seperated by the phased or unphased separators. These columns are ordered the same way as the `callSetDbIds` array.
              type: string
          example:
          - ['0|0', '1|0', '1/1']
          - ['0|0', '1|0', '1/1']
          - ['0|0', '1|0', '1/1']
        genotypeFields:
          description: Genotype fields are additional layers of metadata associated with each genotype. They are organized here as a collection of additional matrices the same size and orientation as the genotype matrix.  
          type: array
          items:
            description: This is a single Genotype Field matrix, providing some additional layer of metadata associated with each genotype value.  
            type: object
            properties:
              fieldType:
                description: The type of field represented in this Genotype Field matrix. This is intended to help parse the data out of JSON.
                type: string
                enum:
                - string
                - integer
                - float
                - boolean
                example: integer
              fieldName:
                description: |-
                  The name of the field represented in this Genotype Field matrix. Examples include: "Genotype Quality", "Read Depth", and "Haplotype Quality"
                type: string
                example: Genotype Quality
              fieldAbbreviation:
                description: |-
                  The abbreviated code of the field represented in this Genotype Field matrix. These codes should match the VCF standard when possible. Examples include: "GQ", "RD", and "HQ"
                type: string
                example: GQ
              fieldMatrix:
                description: The Genotype Field matrix data, providing an additional layer of metadata associated with each genotype value. This matrix should be the same size and orientation as the genotype matrix.
                type: array
                items:
                  description: An array of rows in the Genotype Field matrix
                  type: array
                  items:
                    description: All the values per row (columns) in the Genotype Field matrix
                    type: string
                example:
                - ['48', '48', '43']
                - ['49', '3', '41']
                - ['21', '2', '35']
        expandHomozygotes: 
          description: Should homozygotes be expanded (true) or collapsed into a single occurrence (false)
          type: boolean
          example: true
        sepPhased:
          description: The string used as a separator for phased allele calls.
          type: string
          example: '|'
        sepUnphased:
          description: The string used as a separator for unphased allele calls.
          type: string
          example: '/'
        unknownString:
          description: The string used as a representation for missing data.
          type: string
          example: '.'