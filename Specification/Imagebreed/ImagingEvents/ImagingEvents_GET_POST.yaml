info:
  title: BrAPI
  version: ''
openapi: 3.0.0
paths:
  /imagingevents:
    get:
      summary: Get the imagingEvent metadata summaries
      description: |-
        Get filtered set of imagingEvent metadata

        Implementation Notes

        - ''imagingEventURL'' should be a complete URL describing the location of the imagingEvent. There is no BrAPI call for 
        retrieving the imagingEvent content, so it could be on a different path, or a different host.

        - ''descriptiveOntologyTerm'' can be thought of as Tags for the imagingEvent. These could be simple descriptive 
        words, or ontology references, or full ontology URI''s.
      parameters:
      - description: The unique identifier for a imagingEvent
        in: query
        name: imagingEventDbId
        required: false
        schema:
          type: string
      - description: The human readable name of an imagingEvent
        in: query
        name: imagingEventName
        required: false
        schema:
          type: string
      - description: The unique identifier of the observation unit an imagingEvent is portraying
        in: query
        name: observationUnitDbId
        required: false
        schema:
          type: string
      - description: The unique identifier of the observation an imagingEvent is associated with
        in: query
        name: observationDbId
        required: false
        schema:
          type: string
      - description: A descriptive term associated with an imagingEvent
        in: query
        name: descriptiveOntologyTerm
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/commonCropName'
      - $ref: '#/components/parameters/programDbId'
      - $ref: '#/components/parameters/externalReferenceID'
      - $ref: '#/components/parameters/externalReferenceId'
      - $ref: '#/components/parameters/externalReferenceSource'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          $ref: '#/components/responses/ImagingEventListResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      tags:
      - ImagingEvents
    post:
      summary: Create new imagingEvent metadata records
      description: |-
        Create new imagingEvent metadata records

        Implementation Notes
        
        - This endpoint should be implemented with 'PUT /imagingEvents/{imagingEventDbId}/imagingEventcontent' for full imagingEvent upload capability

        - ''imagingEventURL'' should be a complete URL describing the location of the imagingEvent. There is no BrAPI call for retrieving 
        the imagingEvent content, so it could be on a different path, or a different host.

        - ''descriptiveOntologyTerm'' can be thought of as Tags for the imagingEvent. These could be simple descriptive words, or 
        ontology references, or full ontology URI's.

        - The '/imagingEvents' calls support a GeoJSON object structure for describing their location. The BrAPI spec for GeoJSON 
        only supports two of the possible geometries; Points and Polygons.

        - With most imagingEvents, the Point geometry should be used, and it should indicate the longitude and latitude of the camera.

        - For top down imagingEvents (ie from drones, cranes, etc), the Point geometry may be used to indicate the longitude and 
        latitude of the centroid of the imagingEvent content, and the Polygon geometry may be used to indicate the border of the 
        imagingEvent content.

        An example use case is available on the BrAPI Wiki -> https://wiki.brapi.org/index.php/ImagingEvent_Upload
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImagingEventNewRequest'
      responses:
        '200':
          $ref: '#/components/responses/ImagingEventListResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      tags:
      - ImagingEvents
components:
  responses:
    ImagingEventListResponse:
      content:
        application/json:
          schema:
            title: ImagingEventListResponse
            type: object
            properties:
              '@context':
                $ref: '#/components/schemas/Context'
              metadata:
                $ref: '#/components/schemas/metadata'
              result:
                type: object
                properties:
                  data:
                    type: array
                    description: The `data` array is part of the BrAPI standard List Response JSON container. `data` will always contain the primary list of objects being returned by a BrAPI endpoint. `data` is also the only array impacted by the `metadata.pagination` details. When the pagination parameters change, the `data` array will reflect those changes in the JSON response.
                    items:
                      $ref: '#/components/schemas/ImagingEvent'
                required:
                - data
            required:
            - metadata
            - result
      description: OK
      headers: {}
      
