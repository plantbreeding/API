info:
  title: BrAPI
  version: ''
openapi: 3.0.0
paths:
  /observationunits:
    get:
      summary: Get a filtered set of Observation Units
      description: Get a filtered set of Observation Units
      parameters:
      - description: The unique ID of an Observation Unit
        in: query
        name: observationUnitDbId
        required: false
        schema:
          type: string
      - description: The human readable identifier for an Observation Unit
        in: query
        name: observationUnitName
        required: false
        schema:
          type: string
      - description: The unique ID of a location where these observations were collected
        in: query
        name: locationDbId
        required: false
        schema:
          type: string
      - description: The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)
        in: query
        name: seasonDbId
        required: false
        schema:
          type: string
      - description: |-
          Use this parameter to include a list of observations embedded in each ObservationUnit object. 
          
          CAUTION - Use this parameter at your own risk. It may return large, unpaginated lists of observation data. Only set this value to True if you are sure you need to. 
        in: query
        name: includeObservations
        required: false
        schema:
          type: boolean
      - $ref: '#/components/parameters/observationUnitLevelName'
      - $ref: '#/components/parameters/observationUnitLevelOrder'
      - $ref: '#/components/parameters/observationUnitLevelCode'
      - $ref: '#/components/parameters/observationUnitLevelRelationshipName'
      - $ref: '#/components/parameters/observationUnitLevelRelationshipOrder'
      - $ref: '#/components/parameters/observationUnitLevelRelationshipCode' 
      - $ref: '#/components/parameters/observationUnitLevelRelationshipDbId'
      - $ref: '#/components/parameters/commonCropName'
      - $ref: '#/components/parameters/programDbId'
      - $ref: '#/components/parameters/trialDbId'
      - $ref: '#/components/parameters/studyDbId'
      - $ref: '#/components/parameters/germplasmDbId'
      - $ref: '#/components/parameters/externalReferenceID'
      - $ref: '#/components/parameters/externalReferenceId'
      - $ref: '#/components/parameters/externalReferenceSource'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          $ref: '#/components/responses/ObservationUnitListResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      tags:
      - Observation Units
    post:
      summary: Add new Observation Units
      description: Add new Observation Units
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ObservationUnitNewRequest'
      responses:
        '200':
          $ref: '#/components/responses/ObservationUnitListResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      tags:
      - Observation Units
    put:
      summary: Update a set of Observation Units
      description: |-
        Update a set of Observation Units 
        
        Note - In strictly typed languages, this structure can be represented as a Map or Dictionary of objects and parsed directly to JSON. 
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ObservationUnitNewRequest'
              example: 
                '<observationUnitDbId_1>': 
                  additionalInfo: {}
                  externalReferences:
                  - referenceID: doi:10.155454/12341234
                    referenceSource: DOI
                  germplasmDbId: e9d9ed57
                  germplasmName: A0000001
                  locationDbId: 0e208b20
                  locationName: Field Station Alpha
                  observationUnitName: Plot 31
                  observationUnitPUI: http://pui.per/plot/1a9afc14
                  observationUnitPosition:
                    entryType: TEST
                    geoCoordinates:
                      geometry:
                        coordinates: [ -76.506042, 42.417373, 123 ]
                        type: Point
                      type: Feature
                    observationLevel:
                      levelName: plot
                      levelOrder: 2
                      levelCode: Plot_456
                    observationLevelRelationships:
                    - levelCode: Field_1
                      levelName: field
                      levelOrder: 0
                    - levelCode: Block_6
                      levelName: block
                      levelOrder: 1
                    - levelCode: Plot_456
                      levelName: plot
                      levelOrder: 2
                    positionCoordinateX: '78'
                    positionCoordinateXType: GRID_COL
                    positionCoordinateY: '08'
                    positionCoordinateYType: GRID_ROW
                  programDbId: 2d763a7a
                  programName: The Perfect Breeding Program
                  seedLotDbId: 261ecb09
                  studyDbId: 9865addc
                  studyName: Purple_Tomato_1
                  treatments:
                  - factor: fertilizer
                    modality: low fertilizer
                  trialDbId: 776a609c
                  trialName: Purple Tomato                  
                '<observationUnitDbId_2>': 
                  additionalInfo: {}
                  externalReferences:
                  - referenceID: doi:10.155454/12341234
                    referenceSource: DOI
                  germplasmDbId: e9d9ed57
                  germplasmName: A0000001
                  locationDbId: 0e208b20
                  locationName: Field Station Alpha
                  observationUnitName: Plot 17
                  observationUnitPUI: http://pui.per/plot/1a9afc14
                  observationUnitPosition:
                    entryType: TEST
                    geoCoordinates:
                      geometry:
                        coordinates: [ -76.506042, 42.417373, 123 ]
                        type: Point
                      type: Feature
                    observationLevel:
                      levelName: plot
                      levelOrder: 2
                      levelCode: Plot_123
                    observationLevelRelationships:
                    - levelCode: Field_1
                      levelName: field 
                      levelOrder: 0
                    - levelCode: Block_12
                      levelName: block
                      levelOrder: 1
                    - levelCode: Plot_123
                      levelName: plot
                      levelOrder: 2
                    positionCoordinateX: '74'
                    positionCoordinateXType: GRID_COL
                    positionCoordinateY: '03'
                    positionCoordinateYType: GRID_ROW 
                  programDbId: 2d763a7a
                  programName: The Perfect Breeding Program
                  seedLotDbId: 261ecb09
                  studyDbId: 9865addc 
                  studyName: Purple_Tomato_1
                  treatments:
                  - factor: fertilizer
                    modality: low fertilizer
                  trialDbId: 776a609c
                  trialName: Purple Tomato
      responses:
        '200':
          $ref: '#/components/responses/ObservationUnitListResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      tags:
      - Observation Units
components:
  responses:
    ObservationUnitListResponse:
      content:
        application/json:
          schema:
            title: ObservationUnitListResponse
            type: object
            properties:
              '@context':
                $ref: '#/components/schemas/Context'
              metadata:
                $ref: '#/components/schemas/metadata'
              result:
                properties:
                  data:
                    description: The `data` array is part of the BrAPI standard List Response JSON container. `data` will always contain the primary list of objects being returned by a BrAPI endpoint. `data` is also the only array impacted by the `metadata.pagination` details. When the pagination parameters change, the `data` array will reflect those changes in the JSON response.
                    items:
                      $ref: '#/components/schemas/ObservationUnit'
                    type: array
                required:
                - data
                type: object
            required:
            - metadata
            - result
      description: OK
      headers: {}
    
      